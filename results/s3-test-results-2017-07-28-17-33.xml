<?xml version="1.0" encoding="UTF-8"?><testsuite name="nosetests" tests="35" errors="1" failures="0" skip="0"><testcase classname="&lt;nose.suite.ContextSuite context=s3tests" name="functional&gt;:setup" time="0.000"><error type="boto.exception.S3ResponseError" message="S3ResponseError: 403 Forbidden&#10;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&#10;&lt;Error&gt;&lt;Code&gt;InvalidAccessKeyId&lt;/Code&gt;&lt;Message&gt;The AWS Access Key Id you provided does not exist in our records.&lt;/Message&gt;&lt;AWSAccessKeyId&gt;AKIAJP7MF7672T2YMZ4A&lt;/AWSAccessKeyId&gt;&lt;RequestId&gt;A3B75082CF88EA0D&lt;/RequestId&gt;&lt;HostId&gt;YJX6vgqEDI4fgOdORaNQ7bFJe+GAOvbULswbC7DIo0uHB7vj5vyJjZjjDkVdfjaTDJa4/cTfXw0=&lt;/HostId&gt;&lt;/Error&gt;&#10;-------------------- &gt;&gt; begin captured stdout &lt;&lt; ---------------------&#10;Deleting buckets on alt&#10;Cleaning buckets from connection alt prefix 's3-5rcdhnbodzgvl6ziybhz5ybzb0-'.&#10;&#10;--------------------- &gt;&gt; end captured stdout &lt;&lt; ----------------------&#10;-------------------- &gt;&gt; begin captured logging &lt;&lt; --------------------&#10;boto: DEBUG: Using access key provided by client.&#10;boto: DEBUG: Using secret key provided by client.&#10;boto: DEBUG: Using access key provided by client.&#10;boto: DEBUG: Using secret key provided by client.&#10;boto: DEBUG: path=/&#10;boto: DEBUG: auth_path=/&#10;boto: DEBUG: Method: GET&#10;boto: DEBUG: Path: /&#10;boto: DEBUG: Data: &#10;boto: DEBUG: Headers: {}&#10;boto: DEBUG: Host: s3.amazonaws.com&#10;boto: DEBUG: Port: 80&#10;boto: DEBUG: Params: {}&#10;boto: DEBUG: establishing HTTP connection: kwargs={'port': 80, 'timeout': 70}&#10;boto: DEBUG: Token: None&#10;boto: DEBUG: StringToSign:&#10;GET&#10;&#10;&#10;Sat, 29 Jul 2017 00:33:54 GMT&#10;/&#10;boto: DEBUG: Signature:&#10;AWS AKIAJP7MF7672T2YMZ4A:nYO++FandUGdasRSoyEyvIMAHUU=&#10;boto: DEBUG: Final headers: {'Date': 'Sat, 29 Jul 2017 00:33:54 GMT', 'Content-Length': '0', 'Authorization': u'AWS AKIAJP7MF7672T2YMZ4A:nYO++FandUGdasRSoyEyvIMAHUU=', 'User-Agent': 'Boto/2.48.0 Python/2.7.5 Linux/3.10.0-514.26.2.el7.x86_64'}&#10;boto: DEBUG: Response headers: [('x-amz-id-2', 'YJX6vgqEDI4fgOdORaNQ7bFJe+GAOvbULswbC7DIo0uHB7vj5vyJjZjjDkVdfjaTDJa4/cTfXw0='), ('server', 'AmazonS3'), ('transfer-encoding', 'chunked'), ('x-amz-request-id', 'A3B75082CF88EA0D'), ('date', 'Sat, 29 Jul 2017 00:33:53 GMT'), ('content-type', 'application/xml')]&#10;--------------------- &gt;&gt; end captured logging &lt;&lt; ---------------------"><![CDATA[  File "/usr/bin/s3-tests/virtualenv/lib/python2.7/site-packages/nose/suite.py", line 209, in run
    self.setUp()
  File "/usr/bin/s3-tests/virtualenv/lib/python2.7/site-packages/nose/suite.py", line 292, in setUp
    self.setupContext(ancestor)
  File "/usr/bin/s3-tests/virtualenv/lib/python2.7/site-packages/nose/suite.py", line 315, in setupContext
    try_run(context, names)
  File "/usr/bin/s3-tests/virtualenv/lib/python2.7/site-packages/nose/util.py", line 471, in try_run
    return func()
  File "/usr/bin/s3-tests/s3tests/functional/__init__.py", line 361, in setup
    nuke_prefixed_buckets(prefix=prefix)
  File "/usr/bin/s3-tests/s3tests/functional/__init__.py", line 115, in nuke_prefixed_buckets
    nuke_prefixed_buckets_on_conn(prefix, name, conn)
  File "/usr/bin/s3-tests/s3tests/functional/__init__.py", line 67, in nuke_prefixed_buckets_on_conn
    for bucket in conn.get_all_buckets():
  File "/usr/bin/s3-tests/virtualenv/lib/python2.7/site-packages/boto/s3/connection.py", line 447, in get_all_buckets
    response.status, response.reason, body)
'S3ResponseError: 403 Forbidden\n<?xml version="1.0" encoding="UTF-8"?>\n<Error><Code>InvalidAccessKeyId</Code><Message>The AWS Access Key Id you provided does not exist in our records.</Message><AWSAccessKeyId>AKIAJP7MF7672T2YMZ4A</AWSAccessKeyId><RequestId>A3B75082CF88EA0D</RequestId><HostId>YJX6vgqEDI4fgOdORaNQ7bFJe+GAOvbULswbC7DIo0uHB7vj5vyJjZjjDkVdfjaTDJa4/cTfXw0=</HostId></Error>\n-------------------- >> begin captured stdout << ---------------------\nDeleting buckets on alt\nCleaning buckets from connection alt prefix \'s3-5rcdhnbodzgvl6ziybhz5ybzb0-\'.\n\n--------------------- >> end captured stdout << ----------------------\n-------------------- >> begin captured logging << --------------------\nboto: DEBUG: Using access key provided by client.\nboto: DEBUG: Using secret key provided by client.\nboto: DEBUG: Using access key provided by client.\nboto: DEBUG: Using secret key provided by client.\nboto: DEBUG: path=/\nboto: DEBUG: auth_path=/\nboto: DEBUG: Method: GET\nboto: DEBUG: Path: /\nboto: DEBUG: Data: \nboto: DEBUG: Headers: {}\nboto: DEBUG: Host: s3.amazonaws.com\nboto: DEBUG: Port: 80\nboto: DEBUG: Params: {}\nboto: DEBUG: establishing HTTP connection: kwargs={\'port\': 80, \'timeout\': 70}\nboto: DEBUG: Token: None\nboto: DEBUG: StringToSign:\nGET\n\n\nSat, 29 Jul 2017 00:33:54 GMT\n/\nboto: DEBUG: Signature:\nAWS AKIAJP7MF7672T2YMZ4A:nYO++FandUGdasRSoyEyvIMAHUU=\nboto: DEBUG: Final headers: {\'Date\': \'Sat, 29 Jul 2017 00:33:54 GMT\', \'Content-Length\': \'0\', \'Authorization\': u\'AWS AKIAJP7MF7672T2YMZ4A:nYO++FandUGdasRSoyEyvIMAHUU=\', \'User-Agent\': \'Boto/2.48.0 Python/2.7.5 Linux/3.10.0-514.26.2.el7.x86_64\'}\nboto: DEBUG: Response headers: [(\'x-amz-id-2\', \'YJX6vgqEDI4fgOdORaNQ7bFJe+GAOvbULswbC7DIo0uHB7vj5vyJjZjjDkVdfjaTDJa4/cTfXw0=\'), (\'server\', \'AmazonS3\'), (\'transfer-encoding\', \'chunked\'), (\'x-amz-request-id\', \'A3B75082CF88EA0D\'), (\'date\', \'Sat, 29 Jul 2017 00:33:53 GMT\'), (\'content-type\', \'application/xml\')]\n--------------------- >> end captured logging << ---------------------']]></error><system-out><![CDATA[Deleting buckets on alt
Cleaning buckets from connection alt prefix 's3-5rcdhnbodzgvl6ziybhz5ybzb0-'.
]]></system-out></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_load_graph" time="0.104"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_descend_leaf_node" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_descend_node" time="0.001"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_descend_bad_node" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_descend_nonexistant_child" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_printable" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_binary" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_printable_no_whitespace" time="0.538"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_binary_no_whitespace" time="0.232"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_no_args" time="0.507"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_no_charset" time="0.045"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_exact_length" time="0.034"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_bad_charset" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_random_missing_length" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_assemble_decision" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_escape" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_indirect" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_indirect_double" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_recursive" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_recursive_mutual" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_recursive_not_too_eager" time="0.001"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_make_choice_unweighted_with_space" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_weighted_choices" time="0.011"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_null_choices" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_weighted_null_choices" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_null_child" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_weighted_set" time="0.011"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_header_presence" time="0.001"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_duplicate_header" time="0.000"></testcase><testcase classname="s3tests.fuzz.test.test_fuzzer" name="test_expand_headers" time="0.000"></testcase><testcase classname="test_realistic.TestFileValidator" name="test_new_file_is_valid" time="0.177"></testcase><testcase classname="test_realistic.TestFileValidator" name="test_new_file_is_valid_on_several_calls" time="0.179"></testcase><testcase classname="test_realistic.TestFileValidator" name="test_new_file_is_valid_when_size_is_1" time="0.000"></testcase><testcase classname="test_realistic.TestFiles" name="test_random_file_valid" time="0.213"></testcase></testsuite>